#include <iostream>
#include<deque>
#include<vector>
using namespace std;

/*
 *
 * deque 也是线性容器，但是其连续是个假象，分段才是事实
 * 实际上是，逻辑上是连续的(可以使用迭代器遍历，迭代器支持步长计算)，物理上是相对连续的(分段的)
 * begin()++,begin()+=10;begin() != end()
 * 通过迭代器操作维护了一个线性容器的假象
 *
 *
 * deque 至少会维护
 *      begin() 迭代器
 *      end() 迭代器
 *      map   中控器，中控器中默认维护8个指针，每个指针指向一段连续的内存空间(默认512字节大小)
 *
 *  迭代器至少维护
 *      map 中控器的具体信息(map 节点)
 *      当前迭代器指向的元素
 *      当前段的首元素
 *      当前段的尾元素
 *
 *  迭代器每次迭代的时候，++,--，都要判断，是不是走到了当前这段连续内存空间的开始或结尾，如果走到了首尾，
 *  则需要根据对应的 map 节点数据，决定是否切换map，跳到新的段里面去
 *
 * 中控器，一段连续的内存空间，也可称之为map(这个并不是stl 里面的map容器)，map 维护8个指针地址，每个指针指向一个512字节的连续内存空间
 *
 * */

int main(){

    return 0;
}